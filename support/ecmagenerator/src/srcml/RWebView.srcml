<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++" dir="./gui" filename="RWebView.h"><comment type="block">/**
 * Copyright (c) 2011-2016 by Andrew Mustun. All rights reserved.
 * 
 * This file is part of the QCAD project.
 *
 * QCAD is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * QCAD is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with QCAD.
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>RWEBVIEW_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>RWEBVIEW_H_</name></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gui_global.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QWebView&gt;</cpp:file></cpp:include>

<comment type="block">/**
 * \scriptable
 * \ingroup gui
 */</comment>
<class>class <macro><name>QCADGUI_EXPORT</name></macro> <name>RWebView</name><super>: <specifier>public</specifier> <name>QWebView</name></super> <block>{<private type="default">

<macro><name>Q_OBJECT</name></macro>

</private><public>public:
    <constructor_decl><name>RWebView</name><parameter_list>(<param><decl><type><name>QWidget</name>*</type> <name>parent</name></decl></param>)</parameter_list>;</constructor_decl>
    <destructor_decl><specifier>virtual</specifier> <name>~RWebView</name><parameter_list>()</parameter_list>;</destructor_decl>
    <function_decl><type><name>virtual</name> <name>QSize</name></type> <name>sizeHint</name><parameter_list>()</parameter_list> <specifier>const</specifier>;</function_decl>
    <function_decl><type><name>virtual</name> <name>QSize</name></type> <name>minimumSizeHint</name><parameter_list>()</parameter_list> <specifier>const</specifier>;</function_decl>

    <function><type><name>void</name></type> <name>installEventFilter</name><parameter_list>(<param><decl><type><name>QObject</name>*</type> <name>filterObj</name></decl></param>)</parameter_list> <block>{
        <constructor_decl><name>QWebView::installEventFilter</name><parameter_list>(<param><decl><type><name>filterObj</name></type></decl></param>)</parameter_list>;</constructor_decl>
    }</block></function>

    <function><type><name>void</name></type> <name>setAttribute</name><parameter_list>(<param><decl><type><name><name>Qt</name>::<name>WidgetAttribute</name></name></type> <name>attribute</name></decl></param>, <param><decl><type><name>bool</name></type> <name>on</name> =<init> <expr><name>true</name></expr></init></decl></param>)</parameter_list> <block>{
        <constructor_decl><name>QWebView::setAttribute</name><parameter_list>(<param><decl><type><name>attribute</name></type></decl></param>, <param><decl><type><name>on</name></type></decl></param>)</parameter_list>;</constructor_decl>
    }</block></function>

    <function><type><name>QObject</name>*</type> <name>parent</name><parameter_list>()</parameter_list> <specifier>const</specifier> <block>{
        <return>return <expr><call><name><name>QWebView</name>::<name>parent</name></name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>
</public>}</block>;</class>

<macro><name>Q_DECLARE_METATYPE</name><argument_list>(<argument>RWebView*</argument>)</argument_list></macro>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
