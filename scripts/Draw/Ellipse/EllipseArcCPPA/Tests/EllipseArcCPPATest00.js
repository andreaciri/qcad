/**
 * Copyright (c) 2011-2013 by Andrew Mustun. All rights reserved.
 * 
 * This file is part of the QCAD project.
 *
 * QCAD is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * QCAD is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with QCAD.
 */
// Auto generated by Testing Dashboard
// File        : scripts/Draw/Ellipse/EllipseArcCPPA/Tests/EllipseArcCPPATest00.js
// Timestamp   : 2011-03-01 13:53:03
// Description : 4 ellipse arcs

include('scripts/Pro/Developer/TestingDashboard/TdbTest.js');

function EllipseArcCPPATest00() {
    TdbTest.call(this, 'scripts/Draw/Ellipse/EllipseArcCPPA/Tests/EllipseArcCPPATest00.js');
}

EllipseArcCPPATest00.prototype = new TdbTest();

EllipseArcCPPATest00.prototype.test00 = function() {
    qDebug('running EllipseArcCPPATest00.test00()...');
    this.setUp();
    this.importFile('scripts/Draw/Ellipse/EllipseArcCPPA/Tests/lines.dxf');
    this.clickOnWidget('MainWindow::MainToolsPanel::EllipseToolsPanelButton');
    this.clickOnWidget('MainWindow::EllipseToolsPanel::EllipseArcCPPAButton');
    this.setToolOption('EllipseArcCPPA/Direction', 'CounterClockwise');
    this.updateToolOptions();
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(9.995614, 9.916667);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(9.995614, 9.916667);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(9.995614, 0.055764);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(9.995614, 0.055764);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(13.129699, 9.993108);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(13.129699, 9.993108);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(12.976817, -0.173559);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(12.976817, -0.173559);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(6.93797, -0.020677);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(6.93797, -0.020677);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(29.946742, 9.993108);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(29.946742, 9.993108);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(29.946742, -0.097118);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(29.946742, -0.097118);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(37.208647, 9.840226);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(37.208647, 9.840226);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(35.985589, -0.097118);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(35.985589, -0.097118);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(23.984336, -0.020677);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(23.984336, -0.020677);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(9.919173, 20.083333);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(9.919173, 20.083333);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(10.072055, 29.867794);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(10.072055, 29.867794);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(12.900376, 20.159774);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(12.900376, 20.159774);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(6.93797, 30.020677);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(6.93797, 30.020677);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(13.053258, 29.944236);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(13.053258, 29.944236);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(29.946742, 20.006892);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(29.946742, 20.006892);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(29.946742, 29.638471);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(29.946742, 29.638471);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(23.067043, 20.159774);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(23.067043, 20.159774);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(23.907895, 29.944236);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(23.907895, 29.944236);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(13.081967213114753, new RVector(0.629699, 1.01441, 0) );
    var p = new RVector(35.985589, 29.944236);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    var p = new RVector(35.985589, 29.944236);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    var p = new RVector(40.18985, 19.624687);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.RightButton, 2, 0);
    var p = new RVector(40.18985, 19.624687);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.RightButton, 0, 0);
    this.verifyDrawing('EllipseArcCPPATest00_000.dxf');
    this.tearDown();
    qDebug('finished EllipseArcCPPATest00.test00()');
};

