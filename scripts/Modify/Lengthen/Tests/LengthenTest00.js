/**
 * Copyright (c) 2011-2013 by Andrew Mustun. All rights reserved.
 * 
 * This file is part of the QCAD project.
 *
 * QCAD is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * QCAD is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with QCAD.
 */
// Auto generated by Testing Dashboard
// File        : scripts/Modify/Lengthen/Tests/LengthenTest00.js
// Timestamp   : 2011-08-05 15:23:08
// Description : 

include('scripts/Pro/Developer/TestingDashboard/TdbTest.js');

function LengthenTest00() {
    TdbTest.call(this, 'scripts/Modify/Lengthen/Tests/LengthenTest00.js');
}

LengthenTest00.prototype = new TdbTest();

LengthenTest00.prototype.test00 = function() {
    qDebug('running LengthenTest00.test00()...');
    this.setUp();
    this.importFile('scripts/Modify/Lengthen/Tests/data/lines.dxf');
    var w = objectFromPath('MainWindow::CadToolBar::MainToolsPanel');
    this.sendMouseEvent(w, QEvent.MouseButtonPress, new QPoint(62, 400), Qt.LeftButton, 1, 0);
    var w = objectFromPath('MainWindow::CadToolBar::MainToolsPanel');
    this.sendMouseEvent(w, QEvent.MouseButtonRelease, new QPoint(62, 400), Qt.LeftButton, 0, 0);
    TdbTest.clickOnWidget('MainWindow::CadToolBar::MainToolsPanel::ModifyToolsPanelButton');
    TdbTest.clickOnWidget('MainWindow::CadToolBar::ModifyToolsPanel::LengthenButton');
    this.setToolOption('Lengthen/Amount',  [ 1, 0 ] );
    this.updateToolOptions();
    this.setZoom(10.123456790123457, new RVector(4.99146, 1.2378, 0) );
    var p = new RVector(20, 24.642683);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('Lengthen/Amount',  [ 2, 0 ] );
    this.updateToolOptions();
    this.setZoom(10.123456790123457, new RVector(4.99146, 1.2378, 0) );
    var p = new RVector(20, 36.990244);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('Lengthen/Amount',  [ 3, 0 ] );
    this.updateToolOptions();
    this.setZoom(10.123456790123457, new RVector(4.99146, 1.2378, 0) );
    var p = new RVector(13.184146, 19.90122);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('Lengthen/Amount',  [ 4, 0 ] );
    this.updateToolOptions();
    this.setZoom(10.123456790123457, new RVector(4.99146, 1.2378, 0) );
    var p = new RVector(4.886585, 20.09878);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('Lengthen/Amount',  [ 5, 0 ] );
    this.updateToolOptions();
    this.setZoom(10.123456790123457, new RVector(4.99146, 1.2378, 0) );
    var p = new RVector(19.90122, 11.208537);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('Lengthen/Amount',  [ 6, 0 ] );
    this.updateToolOptions();
    this.setZoom(10.123456790123457, new RVector(4.99146, 1.2378, 0) );
    var p = new RVector(20.493902, 7.75122);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('Lengthen/Amount',  [ 7, 0 ] );
    this.updateToolOptions();
    this.setZoom(10.123456790123457, new RVector(4.99146, 1.2378, 0) );
    var p = new RVector(30.371951, 20);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('Lengthen/Amount',  [ 8, 0 ] );
    this.updateToolOptions();
    this.setZoom(10.123456790123457, new RVector(4.99146, 1.2378, 0) );
    var p = new RVector(31.162195, 20.09878);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    var p = new RVector(1.132927, 32.15);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.RightButton, 2, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.RightButton, 0, 0);
    this.verifyDrawing('LengthenTest00_000.dxf');
    this.tearDown();
    qDebug('finished LengthenTest00.test00()');
};

